---
- name: deploy nginx docker service
  hosts: all
  become: true

  vars:
    nginx_dir: /opt/deploy/nginx

  tasks:
    - name: check nginx deploy directory exists
      ansible.builtin.file:
        path: "{{ nginx_dir }}"
        state: directory
        mode: "0755"

    - name: copy nginx compose file
      ansible.builtin.copy:
        src: ../apps/nginx/compose.yaml
        dest: "{{ nginx_dir }}/compose.yaml"
        mode: "0644"
      register: compose_copy

    - name: copy nginx main config
      ansible.builtin.copy:
        src: ../apps/nginx/nginx.conf
        dest: "{{ nginx_dir }}/nginx.conf"
        mode: "0644"
      register: nginx_conf_copy

    - name: copy nginx conf.d directory
      ansible.builtin.synchronize:
        src: ../apps/nginx/conf.d/
        dest: "{{ nginx_dir }}/conf.d/"
        recursive: yes
      register: nginx_conf_d_sync

    - name: validate nginx config
      ansible.builtin.command:
        chdir: "{{ nginx_dir }}"
        cmd: docker compose -f compose.yaml run --rm front-nginx nginx -t
      register: nginx_test
      ignore_errors: true

    - name: fail if nginx config is invalid
      ansible.builtin.fail:
        msg: "nginx config test failed: {{ nginx_test.stderr }}"
      when: nginx_test.rc != 0

    - name: apply nginx compose changes if compose.yaml changed
      ansible.builtin.command:
        chdir: "{{ nginx_dir }}"
        cmd: docker compose -f compose.yaml up -d
      when: compose_copy.changed

    - name: reload nginx if configs changed
      ansible.builtin.command:
        chdir: "{{ nginx_dir }}"
        cmd: docker compose -f compose.yaml exec front-nginx nginx -s reload
      when: nginx_conf_copy.changed or nginx_conf_d_sync.changed
