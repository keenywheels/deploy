---
- name: deploy nginx
  hosts: all
  become: true

  vars:
    docker_network: vixar-net
    nginx_dir: /opt/deploy/nginx
    nginx_service: front-nginx
    compose_file: "{{ nginx_dir }}/compose.yaml"

  tasks:
    - name: check deploy directory exists
      ansible.builtin.file:
        path: "{{ nginx_dir }}"
        state: directory
        mode: "0755"

    - name: check docker network exists
      community.docker.docker_network:
        name: "{{ docker_network }}"
        state: present

    - name: transfer compose to server
      ansible.builtin.copy:
        src: ../apps/nginx/compose.yaml
        dest: "{{ compose_file }}"
        mode: "0644"
      register: compose_copy
      notify: restart nginx

    - name: sync nginx configs
      ansible.builtin.synchronize:
        src: ../apps/nginx/
        dest: "{{ nginx_dir }}/"
        recursive: yes
      register: nginx_sync

    - name: pull images
      ansible.builtin.command:
        chdir: "{{ nginx_dir }}"
        cmd: docker compose -f compose.yaml pull
      changed_when: false

    - name: validate nginx config
      ansible.builtin.command:
        chdir: "{{ nginx_dir }}"
        cmd: docker compose -f compose.yaml run --rm {{ nginx_service }} nginx -t
      register: nginx_test
      ignore_errors: true
      when: nginx_sync.changed

    - name: fail if nginx config test failed
      ansible.builtin.fail:
        msg: "nginx config test failed: {{ nginx_test.stderr }}"
      when: nginx_sync.changed and nginx_test.rc != 0

    - name: apply nginx config if changed
      ansible.builtin.command:
        chdir: "{{ nginx_dir }}"
        cmd: docker compose -f compose.yaml exec {{ nginx_service }} nginx -s reload
      when: nginx_sync.changed and nginx_test.rc == 0 and not compose_copy.changed

  handlers:
    - name: restart nginx
      ansible.builtin.shell: |
        docker rm -f {{ nginx_service }} || true
        docker compose -f compose.yaml up -d
      args:
        chdir: "{{ nginx_dir }}"
      listen: restart nginx
