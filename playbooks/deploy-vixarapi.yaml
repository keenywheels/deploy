---
- name: deploy vixarapi
  hosts: all
  become: true

  vars:
    deploy_dir: /opt/deploy/vixarapi
    compose_file: compose.yaml
    docker_network: vixar-net
    local_compose_path: ../apps/vixarapi/compose.yaml
    local_config_dir: ../apps/vixarapi/configs

  tasks:
    - name: check deploy directory exists
      ansible.builtin.file:
        path: "{{ deploy_dir }}"
        state: directory
        mode: "0755"

    - name: check external network exists
      community.docker.docker_network:
        name: "{{ docker_network }}"
        state: present

    - name: login to docker hub
      community.docker.docker_login:
        registry_url: docker.io
        username: "{{ lookup('env', 'DOCKER_HUB_USER') }}"
        password: "{{ lookup('env', 'DOCKER_HUB_TOKEN') }}"
      when: lookup('env', 'DOCKER_HUB_TOKEN') is defined

    - name: copy compose.yaml
      ansible.builtin.copy:
        src: "{{ local_compose_path }}"
        dest: "{{ deploy_dir }}/{{ compose_file }}"
        mode: "0644"
      register: compose_copy

    - name: copy config dir
      ansible.builtin.synchronize:
        src: "{{ local_config_dir }}/"
        dest: "{{ deploy_dir }}/configs/"
        recursive: yes
      register: config_sync

    - name: pull images
      ansible.builtin.command:
        cmd: docker compose -f {{ compose_file }} pull
        chdir: "{{ deploy_dir }}"

    - name: deploy or update services if compose changed
      ansible.builtin.command:
        cmd: docker compose -f {{ compose_file }} up -d
        chdir: "{{ deploy_dir }}"
      when: compose_copy.changed

    - name: restart services if only configs changed
      ansible.builtin.command:
        cmd: docker compose -f {{ compose_file }} restart
        chdir: "{{ deploy_dir }}"
      when: config_sync.changed and not compose_copy.changed

    - name: ensure at least one container is running
      ansible.builtin.command:
        cmd: docker compose -f {{ compose_file }} ps -q
        chdir: "{{ deploy_dir }}"
      register: running_containers

    - name: fail if no containers are running
      ansible.builtin.fail:
        msg: "No containers are running after deploy!"
      when: running_containers.stdout_lines | length == 0
